/* Return the length of the shortest path from any source to any dest in the undirected graph defined by the adjacency matrix A
using floyd algorithm.
   A is an NxN adjacency matrix stored in row-major. Assume the graph is connected. A is undirected.
   Use MPI to compute in parallel. Assume MPI has already been initialized.
   Every rank has a complete copy of A. The shortest path length is returned on rank 0.
   Example:
   
   input: [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]]
   output: [[0, 1, 1, 2], [1, 0, 2, 1], [1, 2, 0, 1], [2, 1, 1, 0]]
*/
void floyd(std::vector<int> const& A, size_t N, std::vector<int>& R) {