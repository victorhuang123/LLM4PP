/* Return the first longest increasing contiguous subarray in the vector x.
   i.e. if x=[−2, 1, 2, 0, −1, 2, 3, −5, 4] then [-2, 1, 2], [-1, 2, 3] are both longest increasing contiguous
   subarray, but [-2, 1, 2] is the first one, thus we return [-2, 1, 2] as the result.
   Use MPI and OpenMP to compute in parallel. Assume MPI has already been initialized.
   Every rank has a complete copy of x. Return the result on rank 0.
   Example:

   input: [−2, 1, 2, 0, −1, 2, 3, −5, 4]
   output: [-2, 1, 2]
*/
void longestIncreasingSubarray(std::vector<int> const& x, std::vector<int> &output) {